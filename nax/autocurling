root=http://manchesterlib.naxosmusiclibrary.com
stream=80audiostream.naxosmusiclibrary.com
getdisc="$root/catalogue/item.asp?cid="

throttle()
{
	sleep `shuf -i7-50 -n1`
}

Composer()
{
export authors=Composer
export getbiog="$root/composer/btm.asp?composerid="
}
Artist()
{
export getbiog="$root/artist_pro_new.asp?personid="
export authors=Artist
}

Composer

getall()
{
	echo "/composer/showdiscography.asp?pg=${authors:0:1}&pid=$1&wc=0&i= All"
}
getcategory()
{
	sed -n "s_.*FilterWorkCategory('\([^']*\)','\([^']*\)','\([^']*\)','\([^']*\)');\">\([^<]*\)</.*_/composer/showdiscography.asp?pg=\1\&pid=\2\&wc=\3\&i=\4 \5_p"
}
foreach()
{
	while read; do "$@" "$REPLY"; done
}
foreachI()
{
	xargs --no-run-if-empty -n1 -d \\n -iI "$@"
}
rmempty()
{
	ls -1 "$1"|grep -q . || rm -rf "$1"
}
source "$HOME/bin/mutex/wait/mutex-wait"

cleanup() {
	rm -f "$tmp"
	release cookies
	release cookies
	release cookies
	release cookies
	release cookies
	trap - INT TERM EXIT
	exit
}
trap cleanup INT TERM EXIT

tmp=`mktemp`

#set -x
dbg() {
	return
#	echo "$@" 1>&2
}
log() {
	echo "$@" 1>&2
}

refresh=0
resume=0

valid()
{
	[ -s "$1" ] && ! grep -q '<h1>Object Moved</h1>\|/subscriber/sessionexpired\|Your session has already expired\|Session timeout\|libraryentry\.asp' "$1"
}
got()
{
	dbg got "$@"
	([ $refresh -gt 0 ] || valid "$1") && dbg have got
	[ $refresh -gt 0 ] || valid "$1"
}

cookraw() {
	dbg cookraw "$@"
	getLock cookies 1>&2
	dbg locked
	[ -f /tmp/cookies.out ] && (grep -v __CJ_MPlayer /tmp/cookies.out; echo -e "manchesterlib.naxosmusiclibrary.com\tFALSE\t/\tFALSE\t0\t__CJ_MPlayer\t%7B%22Type%22%3A%20%22fmp_http%22%2C%20%22Url%22%3A%20%22/mediaplayer/flash/http-fplayer.asp%22%7D") > /tmp/cookies.in
	#mv -f /tmp/cookies.out /tmp/cookies.in
	dbg curl
	curl -s -A "Mozilla/5.0 (Windows; U; Windows NT 5.1; en-GB; rv:1.9.1.9) Gecko/20100315 Firefox/3.5.9 (.NET CLR 1.1.4322; .NET CLR 3.0.04506.30; .NET CLR 3.0.04506.648; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET4.0C; .NET4.0E)" -H "Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8" -H "Accept-Language: en-gb,en;q=0.5" -H "Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7" --compress -b /tmp/cookies.in -c /tmp/cookies.out "$@"
	dbg curled
	release cookies 1>&2
	dbg released
}

cook() {
	dbg cook
	cookraw "$@" > $tmp
	if valid $tmp
	then
		cat $tmp
	else
	dbg logging in
		login
	dbg recur
		cook "$@"
	fi
}

cooknew()
{
	dst="$1"
	shift
	got "$dst" || (cook "$@" > "$dst")
}

cooknewfalible()
{
	dst="$1"
	shift
	got "$dst" || (cookfalible "$dst" "$@")
}

cooknewfalible()
{
	dst="$1"
	shift
	
	cookraw "$@" > $tmp
	if valid $tmp
	then
		cp $tmp "$dst"
	else
		# single retry
		dbg logging in
			login
		dbg recur
			cook "$@"
		dbg cook
		cookraw "$@" > $tmp
		if valid $tmp
		then
			cp $tmp "$dst"
		fi
	fi
}

cookalbum()
{
  cid=$1
  #cook "http://manchesterlib.naxosmusiclibrary.com/catalogue/item.asp?cid=$cid" > item.asp
  [ -z "$cid" ] && cid=`grep -o cid=[[:alnum:].-]* item.asp|head -1|sed 's/cid=//;s_/_--_g'`
  sed -n '/stream\.asp/s/.*staticurl_\([^"]*\)".*/\1/p' item.asp|foreach cooktrack "$cid"
}

tracktitle()
{
	sed -n 's/.*trackno="\([^"]*\)".*longtracktitle="\([^"]*\)".*/ \2/p' "$1"|sed_fat_from_xml
}

recooktrack()
{
  f="${1#./}"
  cid="${f%/*}"
  track="${f#*/}"
  track="${track%.mp4}"
  cpl="$cid/.$track.cpl"
  cp "$cpl"{,.`date +%Y-%m-%d.%T`} &&
  [ -e "$cpl" ] && tl=`sed -n 's/.*trackid="\([^"]*\)".*/\1/p' "$cpl"` && [ -n "$tl" ] &&
  tok=`cook -e "$getdisc${cid//--/\/}" "$root/mediaplayer/flash/http-fplayer.asp?br=64&tl=$tl" | grep ^[^[:alnum:]]*renderPlayer |sed -n "s/.*'\([A-F0-9]\{8\}-[^']*\)'.*/\1/p"` &&
  [ -n "$tok" ] && (
	cookraw "$root/mediaplayer/flash/config.asp?token=http|$tok" > /dev/null &&
	cookraw "$root/mediaplayer/genericpl.asp?tl=$tl&br=64" > "$cpl" &&
	fms="`sed -n 's/.*fms="\([^"]*\)".*/\1/p' \"$cpl\"|sed 's/64k/128k/;s/\(.*\)_064/\1_128/'`" &&
	echo "$fms" &&
	pushd "$cid" &&
	 (curl -H "Host: $stream" -H "User-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.1; en-GB; rv:1.9.1.9) Gecko/20100315 Firefox/3.5.9 (.NET CLR 1.1.4322; .NET CLR 3.0.04506.30; .NET CLR 3.0.04506.648; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET4.0C; .NET4.0E)" -H "Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8" -H "Accept-Language: en-gb,en;q=0.5" -H "Accept-Encoding: gzip,deflate" -H "Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7" -H "Keep-Alive: 300" -H "Connection: keep-alive" "http://$stream$fms?`curl -i -H "User-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.1; en-GB; rv:1.9.1.9) Gecko/20100315 Firefox/3.5.9 (.NET CLR 1.1.4322; .NET CLR 3.0.04506.30; .NET CLR 3.0.04506.648; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET4.0C; .NET4.0E)" -H "Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8" -H "Accept-Language: en-gb,en;q=0.5" -H "Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7" -H "Keep-Alive: 300" -b /tmp/cookies.in "$root/utilities/encryption/genhttptoken.asp?tid=$tok&url=$fms"|grep ROOT|sed 's_.*<ROOT>\([^<]*\).*_\1_'`" -S -v 2> ".$track.log" > "$track.mp4" &&
	popd &&
	 [ "$resume" = "1" ] || throttle)
	)
}

cooktrack()
{
  cid=$1
  tl=$2
  tok=`cook -e "$getdisc${cid//--/\/}" "$root/mediaplayer/flash/http-fplayer.asp?br=64&tl=$tl" | grep ^[^[:alnum:]]*renderPlayer |sed -n "s/.*'\([A-F0-9]\{8\}-[^']*\)'.*/\1/p"`
  [ -n "$tok" ] && (
	cookraw "$root/mediaplayer/flash/config.asp?token=http|$tok" > /dev/null &&
	cookraw "$root/mediaplayer/genericpl.asp?tl=$tl&br=64" > cpl &&
	#track="`sed -n 's/.*trackno="\([^"]\)".*longtracktitle="\([^"]*\)".*/\1 \2/p' cpl|sed_fat_from_xml`" &&
	title="`tracktitle cpl`" &&
	track="`sed -n 's/.*fmsfilename="\([^"]*\)".*/\1/p' cpl`" &&
	fms="`sed -n 's/.*fms="\([^"]*\)".*/\1/p' cpl|sed 's/64k/128k/;s/_064/_128/'`" &&
	echo "$fms" &&
	( ( [ -n "$title" -a -n "$fms"  ] && ! grep -q 'VBScript runtime' cpl ) || exit ) &&
	mv cpl ".$track.cpl" &&
	( [ "$resume" = "0" -o \! -e "$track.mp4" -a \! -e [0-9]*"$title" ] &&
	 (curl -H "Host: $stream" -H "User-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.1; en-GB; rv:1.9.1.9) Gecko/20100315 Firefox/3.5.9 (.NET CLR 1.1.4322; .NET CLR 3.0.04506.30; .NET CLR 3.0.04506.648; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET4.0C; .NET4.0E)" -H "Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8" -H "Accept-Language: en-gb,en;q=0.5" -H "Accept-Encoding: gzip,deflate" -H "Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7" -H "Keep-Alive: 300" -H "Connection: keep-alive" "http://$stream$fms?`curl -i -H "User-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.1; en-GB; rv:1.9.1.9) Gecko/20100315 Firefox/3.5.9 (.NET CLR 1.1.4322; .NET CLR 3.0.04506.30; .NET CLR 3.0.04506.648; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET4.0C; .NET4.0E)" -H "Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8" -H "Accept-Language: en-gb,en;q=0.5" -H "Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7" -H "Keep-Alive: 300" -b /tmp/cookies.in "$root/utilities/encryption/genhttptoken.asp?tid=$tok&url=$fms"|grep ROOT|sed 's_.*<ROOT>\([^<]*\).*_\1_'`" -S -v 2> ".$track.log" > "$track.mp4" &&
	 [ "$resume" = "1" ] || throttle)
	)
  )
}

nametracks()
{
	ls -v -1|cat -n|while read i fms; do
		fms="${fms%.mp4}"
		[ -e ".$fms.cpl" ] && (
			track="`tracktitle \".$fms.cpl\"`" &&
			[ -n "$track" ] && (
				track="$i$track" &&
				track="${track//\\/\\\\/}" &&
				track="${track//&/\\&}" &&
				export f &&
				find -regex ".*$fms.*" |while read f; do mv -nv "$f" "`ved f \"s/\(.*\)$fms\(.*\)/\1$track\2/\"`" || return 1; done
			)
		) || true
	done
}

unnametracks()
{
	find -maxdepth 1 -name '*.mp4'|while read i; do
		i="`basename \"$i\" .mp4`"
		cpl=".$i.cpl"
		[ -e "$cpl" ] && {
			track="`sed -n 's/.*fmsfilename="\([^"]*\)".*/\1/p' \"$cpl\"`" &&
			track="${track//\\/\\\\/}" &&
			track="${track//&/\\&}" &&
			export f &&
			find -regex ".*$i.*" |while read f; do g="`ved f \"s/\(.*\)$i\(.*\)/\1$track\2/\"`"; [ "$f" = "$g" ] || (mv -nv "$f" "$g" || return 1); done
		} || true
	done
}

login() {
	echo ================== Attempting login ================== >&2
	dbg login
	getLock cookies 1>&2
#	rm -f /tmp/cookies.out /tmp/cookies.in
	cp /tmp/cookies.in{,.`date +%s`}
	cp /tmp/cookies.out{,.`date +%s`}
	
	cookraw "$root"

	valid $tmp || {

	cookraw "$root/libraryentry.asp?mid=101977&subid=OFN0005187&cno=ManchesLibNML03" |tee /dev/stderr > /tmp/lastlogin

	cookraw -e "$root/libraryentry.asp?mid=101977&subid=OFN0005187&cno=ManchesLibNML03" -d "Admin_Login=FALSE&CertNo=ManchesLibNML03&MemID=101977&Member_Login=TRUE&SubID=0005187&can_Search=TRUE&non_login=TRUE&referurl=" $root/page.library_cardno.asp |tee /dev/stderr >> /tmp/lastlogin

	cookraw -H "Content-Type: application/x-www-form-urlencoded" -H "Content-Length: 259" -d "mins15_preview=&subid=OFN0005187&memid=101977&certno=ManchesLibNML03&non_login=TRUE&Admin_Login=FALSE&Member_Login=TRUE&can_Search=TRUE&referurl=&referto=&LG=&USERNAME=MAND9999010254187&PASSWORD=&L_Code=&item_code2=&newQuery=New&MemberFull=&link2=&forgotpass=" -e $root/page.library_cardno.asp $root/action.login_confirm.asp |tee /dev/stderr >> /tmp/lastlogin

	}
	#cook "$root"
	release cookies 1>&2
}

listings()
{
	export cpid=$1
	mkdir -p cpid/$cpid

	export biog=cpid/$cpid/biog.html
	got $biog || (cook "$getbiog$cpid" > $biog)

	export composer=`grep '<tr><td align="left" valign="top">[^b]*<b>[^</>]*</b>' -o $biog|sed 's_.*<b>\([^</>]*\)</b>.*_\1_'`
	[ -z "$composer" ] && composer=`grep -o '<strong>[^<>]*</strong>' $biog|head -1|sed 's/^<strong>\(Composer:\)\? *//;s_ *\(&acute;s Discography\)\? *</strong>__'`
	log $composer
	mkdir -p $authors
	if [ -n "$2" ]; then
	  ln -sfT ../cpid/$cpid "$authors/$composer $2"
	else
	  ln -sfT ../cpid/$cpid "$authors/$composer"
	fi

	if grep -q FilterWorkCategory $biog; then
	(grep FilterWorkCategory $biog|sed 's_FilterWork_\r\nFilterWork_g'|getcategory; getall $cpid)|while read i j; do
		log -e \\t$j
		j=${j//\//-}
		mkdir -p "cpid/$cpid/$j"
		lst="cpid/$cpid/$j/listing.html"
		got "$lst" || (cook -H "Content-length: ${#i}" -H "Content-Type: application/x-www-form-urlencoded; charset=UTF-8" -d "$i" "$root$i" > "$lst")
		#got "$lst" || (cook "$i" > "$lst")
		echo "$lst"
	done
	else
	export alb=cpid/$cpid/view_by_album.html
	cooknew $alb "$root/composer/render_btmalbum.asp?composerid=$cpid"
	grep -A1 \<option "$alb"|tr -d \\\r |grep -v 'All Categories\|^[^a-z]*$'|while read a && read b; do
		a=${a#*value=\"}; a=${a%\"*};
		log -e "\\t${b#*>}"
		lst="cpid/$cpid/${b#*>}"
		mkdir -p "$lst"
		cooknew "$lst/listing.html" "$root$a"
		echo "$lst/listing.html"
	done
	fi
}

album()
{
	cid="${1//\//--}"
	title="${2//\//--}"
	if [ "$cid" != "$title" ]; then 
		newdst="$3"
		alldst="$4"
		[ -d /green/eisd/second ] && [ -L "/green/eisd/second/bycid/$cid.asp" ] && echo "see wma for $cid $title" && return 1
		mkdir -pv cid/$cid |grep -q . &&
			#mkdir -p queue/$cid
			mkdir -p "$newdst" &&
			ln -sfT ../../../cid/$cid "$newdst/$title ($cid)"
		ln -sfT ../../../cid/$cid "$alldst/$title ($cid)"
	fi
}

albums()
{
	a="${1#cpid/}"
	cpid="${a%%/*}"
	b="${a#$cpid/}"
	j="${b%%/*}"
	sed 's/cid=/\r\ncid=/g' "$1" |sed -n 's_cid=\([^"]*\)"[^>]*>\([^<]*\)<.*_\1 \2_p'|while read cid title; do album "$cid" "$title" "New/cpid/$cpid" "New/cpid/$cpid" "cpid/$cpid/$j"; done
}

labelAlbums()
{
	sed 's@</a>@\n@g' "lid/$1/listings/"*.html|sed -n "s@.*CDPage('\([^']*\)[^\"]*\">@\1\n@p" |while read cid && read title; do album "$cid" "$title" "New/lid/$1" "lid/$1/All"; done
}

label()
{
	mkdir -p "lid/$1/listings"
	pushd "lid/$1/listings" || return 1
	cooknew 1.html -e "$root/labels.asp" "$root/browsesearchlabel.asp?catlabelid=$1"
	grep -A1 'font-size: medium; font-weight: bold; color: Black' 1.html| tr -d |
		if read && read lab && lab="${lab## *}" && lab="${lab%% *}" && lab="${lab//\//--}" && [ -n "$lab" ]; then
			mkdir -p Label && ln -sf "../lid/$1/All" "../../../Label/$lab" && (
				for n in `seq 2 $N`; do cooknew $n.html -H "Content-Type: application/x-www-form-urlencoded" -H "Accept: */*" -H "Accept-Charset: UTF-8,*;q=0.5" -d "pageNo=$n&pageSize=15&Sort=CatalogueName%20ASC&CatLabelId=INA&languageId=EN&alpha=ALL" -e "$root/browsesearchlabel.asp?catlabelid=$1" "$root/BrowseSearchRenderLabel.asp"; done
				popd
				labelAlbums "$1"
			)
			return 0
		else
			mv -v 1.html err
		fi
	popd
}

generateMisc()
{
	pushd "$1" &>/dev/null

	mkdir -p All
	find -type l|while read i; do ln -sf `readlink "$i"` "All/${i#./*/}"; done
	rmempty All

	mkdir -p Misc
	(fl|grep -v ^./All/|sed s_^./[^/]*/_./_|sort -u;cd All;fl)|sort|uniq -u|foreachI cp -P All/I Misc
	rmempty Misc

	popd &>/dev/null
}

also_table()
{
	perl -ne 'if (m/<b>Also:<\/b>/) { $a="" } if (m/<\/table>/) { undef $a } if (defined $a) { print }' "$@"
}

urls()
{
	sed -n 's/\(javascript:openNewWindow('\''\|href="\)\(.\/\)\?\([^#][^'\''"]*\)['\''"]/\n--\3\n/gp' |sed -n s/^--//p|sed s%^/%$root/%\;s%^../%$root/%
}

resol()
{
	recode xml..u8|sed s%^\\\(href\\\|src\\\)=[\"\']%%\;s%^/%$root/%\;s%^\\\(./\\\)\\\?../%$root/%
}

extras()
{
  [ -n "$1" ] && pushd "$1" > /dev/null
  [ -e item.asp ] || {
	[ -n "$cid" ] || {
	f=*.cid
	[ -e "$f" ] && cid="${f%.cid}"
	}
	[ -n "$cid" ] || {
	cid="${PWD##*\(}";
	if [ "$cid" = "$PWD" ]
		then cid=
		else cid="${cid%)}"
	fi
	[ "$cid" = "$PWD" -o "$cid" != "${cid// /_}" ] && cid=
	}
	[ -n "$cid" ] && echo $cid
	cooknew item.asp "$getdisc${cid//--/\/}"
	grep -q 'Album Information is currently not available' item.asp && rm item.asp
	cid=
  }
  if [ -e item.asp ]; then
	got=
	(
		grep -i -o 'href="[^"]*booklet[^"]*' item.asp
		grep -i -o 'href="[^"]*rear[^"]*' item.asp
	        grep -i -o "../blurbs_[^']*" item.asp
		grep -o '\(href\|src\)="[^"]*sharedfiles/images/cds[^"]*' item.asp
	)|resol|while read url; do
		dst="${url//blurbs_+([a-z.])/blurb.html}"
		dst="${dst##*/}"
		dst="${dst%%\?*}"
		echo "$dst <<-- $url"
		[ -n "$url" ] && cooknewfalible "also-$dst" "$url" && got=1
	done
	url=$(grep -o '\(href\|src\)="[^"]*sharedfiles/images/cds[^"]*' item.asp|head -1|recode xml..u8)
	url="${url#href=\"}"
	url="${url#src=\"}"
	[ -n "$url" ] && ext="${url##*.}" && cooknewfalible "cover.$ext" "$url"
	if [ -s "cover.$ext" ]; then got=1; else rm -f "cover.$ext"; fi
	
	[ -n "$got" ] && dirname "$d"
  fi
  [ -n "$1" ] && popd > /dev/null
}

pdfs()
{
	find -L -name '*.pdf' -print0|xargs --no-run-if-empty -0 -n1 pdftotext
}

htmltotext()
{
	html2text -style pretty -width 30 -utf8 -o "${1%.*}.txt" "$1"
}

htmls()
{
	find -L -name '*blurb.html*'|foreach htmltotext
}

extrasEverywaar()
{
	find -L -name item.asp -print0|xargs --no-run-if-empty -0 -n1 dirname|foreach extras
	pdfs
	htmls
}

refreshEverything()
{
	pushd "cpid/$1" &&
	rm -f biog.html view_by_album.html */listing.html &&
	popd &&
	everything "$1"
}

everything()
{
	cpid=$1
	listings $cpid $2 |foreach albums
	generateMisc cpid/$cpid
}

processQueue()
{
 while find queue/ -mindepth 1 -type d -print -quit |grep -q .; do
  find queue/ -mindepth 1 -type d |
  sort|uniq|shuf|
  #grep "8.551142"| 
  while read d; do
	cid="${d#queue/}"
	mv -n $d active &>/dev/null || continue
	[ \! -e $d -a -e "active/$cid" ] || continue
	[ `df .|tail -1|sed 's/ \+/ /g'|cut -d\  -f4` -ge 100000 ] || return
		pushd "active/$cid" &&
			echo $$ > .pid &&
			cooknew item.asp "$getdisc${cid//--/\/}" &&
			(if grep -q "Album Information is currently not available" item.asp; then popd; continue; fi) &&
#		echo "$cid" &&
			cookalbum "$cid" &&
#		echo "$cid" &&
			nametracks &&
#		echo "$cid" &&
			(extras || true) &&
#		echo "$cid" &&
		popd &&
#		echo "$cid" &&
		mv "active/$cid/"* "active/$cid/".[^.]* "cid/$cid/" &&
#		echo "$cid" &&
		rmempty "active/$cid" &&
		sleep `shuf -i2-18 -n1` && continue
	break
  done
 done
}

everythingd()
{
  while true; do
	[ -p "${HOME}/bin/nax/everything" ] || (echo Removing stale pipe; rm -f "${HOME}/bin/nax/everything"; mkfifo "${HOME}/bin/nax/everything")
	#foreach everything < "${HOME}/bin/nax/everything"
	while read a b; do everything a b; done < "${HOME}/bin/nax/everything"
  done
}

qeverything()
{
	[ -p "${HOME}/bin/nax/everything" ] || (echo Removing stale pipe; rm -f "${HOME}/bin/nax/everything"; mkfifo "${HOME}/bin/nax/everything")
	echo $1 > "${HOME}/bin/nax/everything"
}

#everything 26290

#echo done

#processQueue
