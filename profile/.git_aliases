git-dir() {
  git rev-parse --git-dir
}
git-cd() {
  git rev-parse --show-cdup
}
git-exists() {
  g=
  [ "$1" = "-q" ] && g=-q && shift
  r=`git-cd`
  [ "$1" = "-r" ] && r= && shift
  [ -n "$r" ] && pushd "$r" > /dev/null 2>&1
  h=HEAD
  [ $# -gt 1 ] && h=$1 && shift
  git ls-tree -d --name-only $h "$@" 2>/dev/null|grep $g .
  ret=$?
  [ -n "$r" ] && popd > /dev/null 2>&1
  return $ret
}

git-fup () {
#echo ${h%:*} - ${h#*:}
         git push $1 -f --all --porcelain|sed -n 's/^![[:space:]]*//p'|while read h i; do git push $1 -f :${h#*:} || break; git push $1 $h || break;  done
}
git-up() {
  git remote|while read i; do git push $i --all "$@" && git push $i --tags "$@" || break; done
}
git-dn() {
  git fetch --all -t "$@"
}
git-ls-stashed-tags() {
  (find `git-dir`/refs-stash -type f -printf %f\  -exec cat {} \;|sort -u; find `git-dir`/refs/tags  -type f -printf %f\  -exec cat {} \;|sort -u)|sort|uniq -d
}
git-rm-stashed-tags() {
  git-ls-stashed-tags|cut -f1 -d\  |xargs -d\\n git tag -d 
}
git-clean-remote-tags() {
  git tag -d $((git tag; git remote|xargs -n1 git ls-remote --tags |grep -v '\^{}$'|grep -o [^/]*$|uniq -u)|sort|uniq -d)
}
git-dn-tags() {
  git-clean-remote-tags
  git-dn "$@"
}
git-for-repos() {
  ls -1d */.git| while read i; do pushd $i/..; "$@"; popd; done
}
git-dn-all() {
  git-for-repos git-dn-tags
}

git-whitespaceless() {
  git diff --ignore-space-change "$@"
}
git-whitespaceless-add() {
  git-whitespaceless "$@"|git apply --cache
}
git-mods() {
  hash="/tmp/$(git log -n1 --pretty=format:%H)"
  rm -f $hash.*
  
  # [ -z "${n##+([0-9])}" ] 
  [ $# -ge 1 ] && [ "${1:0:1}" = "-" ] && n="${1:1}" && echo "$n"|grep -q '^[0-9]*$' && opt=("-U$n" "--inter-hunk-context=$n") && shift
  
  a=0; b=0; export i; git diff "${opt[@]}" --diff-filter=M "$@"|while IFS= read -r i; do
    [ "${i#diff}" = "$i" ] || {((a++)); b=0;};
    [ "${i#@@}" = "$i" ] || ((b++));
    printenv i >> $hash.$a-$b;
  done

  existance=($hash.*)
  [ "${existance[*]}" = "$hash.*" ] && return

  tmpa=`mktemp`
  tmpb=`mktemp`
  for i in $hash.*; do [ "${i%-0}" = "$i" ] && sed  -n s/^-//p $i > $tmpa && sed -n s/^+//p $i > $tmpb && diff -qawB $tmpa $tmpb > /dev/null && rm $i; done
  rm $tmpa $tmpb

  ls -1v $hash.*|xargs cat|( which colordiff > /dev/null && colordiff 2> /dev/null || cat)
  rm $hash.*
}
git-mods-add() {
  git-mods "$@"|git apply --cache
}

git-undo-modes() {
  git diff --summary | grep --color 'mode change 100755 => 100644' | cut -d' ' -f7- | xargs -d'\n' chmod +x
  git diff --summary | grep --color 'mode change 100644 => 100755' | cut -d' ' -f7- | xargs -d'\n' chmod -x
}

git-tags-at() {
	H=$(git log -n1 --format=%H "$@")
	[ -n "$H" ] &&
		git tag|while read t; do
			[ "$H" = "$(git log -n1 --format=%H $t)" ] && echo $t
		done
}

git-graph() {
  [ $# -eq 0 ] && b=--all
  git log --graph --color --decorate=short --oneline $b "$@"
}

[ -z "`type -t __git_ps1`" ] &&
  if [ -e /etc/bash_completion.d/git ]; then
	. /etc/bash_completion.d/git
  elif [ -e /git/contrib/completion/git-completion.bash ]; then
	. /git/contrib/completion/git-completion.bash
  fi
__git_ps1_n() {
  __git_ps1|sed 's/)$/)\n/'
}
#[ -z "`type -t __git_ps1`" ] ||
#  export PS1="${PS1:0:$((${#PS1}-3))}\[\033[33m\$(__git_ps1_n)\033[0m\]\$ "
